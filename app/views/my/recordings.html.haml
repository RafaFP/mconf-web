- if params[:partial]
  = render :partial => 'shared/recording_list', :locals => { :recordings => @recordings, :show_authors => false }

- else

  = content_for :page_header do
    = render :partial => "page_header"

  #my-webconference-recordings.content-block
    .content-block-header
      %h3= t('.title')

      -# only update the recording db if the user has permission to
      - if can?(:fetch_recordings, @room)

        -# a form to trigger the method that will fetch the recordings in the webconf server
        -# TODO: setting data-type to html because bigbluebutton_rails is not returning a proper json on success yet
        = form_tag fetch_recordings_bigbluebutton_room_path(@room, :format => 'json'), :method => :post, :remote => true, :id => 'my-webconference-recordings-fetch', 'data-type' => 'html' do
          #my-webconference-recordings-error
            %span= t(".update_recordings.error")
            = icon_error
          #my-webconference-recordings-success
            %span= t(".update_recordings.success")
            = icon_success
          #my-webconference-recordings-loading
            %span= t(".update_recordings.updating")
            = icon_in_progress
        -# a form to get the html with the list of recordings after the list is updated
        = form_tag my_recordings_path(:partial => true), :method => :get, :remote => true, :id => 'my-webconference-recordings-update'

    #my-webconference-recordings-list-wrapper.content-block-middle
      = render :partial => 'shared/recording_list', :locals => { :recordings => @recordings, :show_authors => false }
