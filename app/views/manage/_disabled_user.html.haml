.thread.thread-user.user-wrapper.user-simple.user-disabled{:class => "#{cycle("thread-even" , "thread-odd")}", :id => "user-#{user.permalink}"}
  .logo-in-thread
    = raw logo_image(user, :size => '32', :title => user.name, :class => 'logo logo-user')

  %ul.management-links
    = link_to enable_user_path(user), :data => { :confirm => t('.enable_confirm') }, :method => :post do
      = icon_enable(:alt => t('.enable'), :title => t('.enable'))
    = render 'manage/destroy_user', user: user

  .user-text
    %span.user-name
      - words = params[:q].try(:split)
      = Mconf::Highlighter.highlight(user.full_name, words)
      = "(#{Mconf::Highlighter.highlight(user.username, words)}, #{Mconf::Highlighter.highlight(user.email, words)})".html_safe

    %span.user-category
      = user_category(user)

    .current-sign-in
      = t('.last_sign_in')
      - if user.current_sign_in_at
        %span.tooltipped{ title: user.current_sign_in_at }= "#{format_date(user.current_sign_in_at, :long) }"
        = " #{t('.auth_using')} #{user_last_sign_in_method(user).to_s}"
      - else
        %span.tooltipped{ title: t('.never_sign_in') }= "?"
      - methods = user_sign_in_methods(user).join(", ")
      = "(#{t('.available_auth')}: #{methods})"
